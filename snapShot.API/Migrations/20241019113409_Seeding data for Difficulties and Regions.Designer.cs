// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using snapShot.API.Data;

#nullable disable

namespace snapShot.API.Migrations
{
    [DbContext(typeof(SnapShotDbContext))]
    [Migration("20241019113409_Seeding data for Difficulties and Regions")]
    partial class SeedingdataforDifficultiesandRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("snapShot.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11093fed-ca90-4277-8789-5189e68630cb"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("726fad50-d3a6-44c7-a68e-f7b97eeece65"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("f0428b14-5737-4926-92cb-ed2a6b852aa9"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("snapShot.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68f40740-4eca-4a45-9154-1c55cefebcb8"),
                            Code = "AKL",
                            Name = "Auckland Region",
                            RegionImageUrl = "https://images.pexels.com/photos/5342974/pexels-photo-5342974.jpeg?auto=compress&cs=tinysrgb&w=600"
                        },
                        new
                        {
                            Id = new Guid("4147dfa0-c90b-4918-ab98-5c463eabb66e"),
                            Code = "WLG",
                            Name = "Wellington Region",
                            RegionImageUrl = "https://images.pexels.com/photos/8379417/pexels-photo-8379417.jpeg?auto=compress&cs=tinysrgb&w=600"
                        },
                        new
                        {
                            Id = new Guid("e45935cc-ae2b-483b-bce3-6e95ff9c6077"),
                            Code = "STL",
                            Name = "Scotland Region"
                        },
                        new
                        {
                            Id = new Guid("0b102c44-c7b5-4bfb-bf7f-d046b2907f5f"),
                            Code = "NSN",
                            Name = "Nelson Region"
                        });
                });

            modelBuilder.Entity("snapShot.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("snapShot.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("snapShot.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("snapShot.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
